{
    "topic": "Redux",
    "importantLinks": [{
        "link": "https://frontarm.com/james-k-nelson/when-context-replaces-redux/#:~:text=React's%20context%20API%20does%20basically,whole%20toolkit%20for%20managing%20state%3A&text=It%20provides%20a%20middleware%20API,to%20tools%20like%20redux%2Dsagas", 
        "text": "Context API and when to choose it over Redux"
    }],
    "logo": "https://javascript-prep.s3.ap-south-1.amazonaws.com/redux-logo.png",
    "questionsAndAnswers":[{
        "question": "Reducers",
        "answer": "Reducers are just pure functions that take the previous state and an action, and return the next state."
    }, {
        "question": "Actions",
        "answer": "Actions are payloads of information that send data from your application to your store. They are the only source of information for the store. You send them to the store using store.dispatch()"
    }, {
        "question": "Connect()",
        "answer": "The connect() function connects a React component to a Redux store. Parameters: mapStateToProps, MapDispatchToProps"
    }, {
        "question": "Redux Alternative",
        "answer": "Read about Context API"
    }, {
        "question": "Redux Design Pattern?",
        "answer": ""
    }, {
        "question": "Why do we need Redux to store state, why not react's state and props?",
        "answer": ""
    }, {
        "question": "Difference between context api and redux",
        "answer": ""
    }, {
        "question": "Examples of when to use redux and when not",
        "answer": ""
    },{
        "question": "Redux lifecycle",
        "answer": ""
    }]
}