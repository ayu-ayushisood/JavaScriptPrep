{"ast":null,"code":"var _jsxFileName = \"/Users/abhinay/Documents/karan/JS/javascript-prep/src/components/DetailPage/QuestionAnswerComponent.js\";\nimport React from 'react';\nimport { Accordion, Card, Row, Col } from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\nimport '../../css/detail.css';\nexport default function QuestionAnswerComponent(props) {\n  const questionsAndAnswersArray = props.questionsAndAnswers;\n  return questionsAndAnswersArray.length > 0 ? questionsAndAnswersArray.map((element, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 10,\n        offset: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }\n    }, ReactHtmlParser(element.question)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 33\n      }\n    }, ReactHtmlParser(element.answer)))))));\n  }) : null;\n}","map":{"version":3,"sources":["/Users/abhinay/Documents/karan/JS/javascript-prep/src/components/DetailPage/QuestionAnswerComponent.js"],"names":["React","Accordion","Card","Row","Col","ReactHtmlParser","QuestionAnswerComponent","props","questionsAndAnswersArray","questionsAndAnswers","length","map","element","index","span","offset","Header","question","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,GAA9B,QAAwC,iBAAxC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,sBAAP;AAEA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACnD,QAAMC,wBAAwB,GAAGD,KAAK,CAACE,mBAAvC;AACA,SAAOD,wBAAwB,CAACE,MAAzB,GAAkC,CAAlC,GAAsCF,wBAAwB,CAACG,GAAzB,CAA6B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1F,wBACI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAEb,IAAI,CAACc,MAA3B;AAAmC,MAAA,QAAQ,EAAEH,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMR,eAAe,CAACO,OAAO,CAACK,QAAT,CADrB,CADJ,eAII,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEJ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaR,eAAe,CAACO,OAAO,CAACM,MAAT,CAA5B,CADJ,CAJJ,CADJ,CADJ,CADJ,CADJ;AAgBH,GAjB4C,CAAtC,GAiBF,IAjBL;AAkBH","sourcesContent":["import React from 'react';\nimport {Accordion, Card, Row, Col} from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\nimport '../../css/detail.css';\n\nexport default function QuestionAnswerComponent(props) {\n    const questionsAndAnswersArray = props.questionsAndAnswers;\n    return questionsAndAnswersArray.length > 0 ? questionsAndAnswersArray.map((element, index) => {\n        return (\n            <Row key={index}>\n                <Col md={{ span: 10, offset: 1 }}>\n                    <Accordion >\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey={index}>\n                                { ReactHtmlParser(element.question) }\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey={index}>\n                                <Card.Body>{ ReactHtmlParser(element.answer) }</Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </Col>\n            </Row>\n        )\n    }) : null\n}"]},"metadata":{},"sourceType":"module"}