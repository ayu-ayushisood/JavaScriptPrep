{"ast":null,"code":"var _jsxFileName = \"/Users/abhinay/Documents/karan/JS/javascript-prep/src/components/DetailPage/QuestionAnswerComponent.js\";\nimport React from 'react';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\nimport '../../css/detail.css';\nexport default function QuestionAnswerComponent(props) {\n  const questionsAndAnswersArray = props.questionsAndAnswers;\n  return questionsAndAnswersArray.length > 0 ? questionsAndAnswersArray.map((element, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, ReactHtmlParser(element.question)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }, ReactHtmlParser(element.answer))))));\n  }) : null;\n}","map":{"version":3,"sources":["/Users/abhinay/Documents/karan/JS/javascript-prep/src/components/DetailPage/QuestionAnswerComponent.js"],"names":["React","Accordion","Card","Button","ReactHtmlParser","QuestionAnswerComponent","props","questionsAndAnswersArray","questionsAndAnswers","length","map","element","index","Header","question","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAsC,iBAAtC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,sBAAP;AAEA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACnD,QAAMC,wBAAwB,GAAGD,KAAK,CAACE,mBAAvC;AACA,SAAOD,wBAAwB,CAACE,MAAzB,GAAkC,CAAlC,GAAsCF,wBAAwB,CAACG,GAAzB,CAA6B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1F,wBACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAEV,IAAI,CAACW,MAA3B;AAAmC,MAAA,QAAQ,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMR,eAAe,CAACO,OAAO,CAACG,QAAT,CADrB,CADJ,eAII,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaR,eAAe,CAACO,OAAO,CAACI,MAAT,CAA5B,CADJ,CAJJ,CADJ,CADJ,CADJ;AAcH,GAf4C,CAAtC,GAeF,IAfL;AAgBH","sourcesContent":["import React from 'react';\nimport {Accordion, Card, Button} from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\nimport '../../css/detail.css';\n\nexport default function QuestionAnswerComponent(props) {\n    const questionsAndAnswersArray = props.questionsAndAnswers;\n    return questionsAndAnswersArray.length > 0 ? questionsAndAnswersArray.map((element, index) => {\n        return (\n            <div key={index}>\n                <Accordion >\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey={index}>\n                            { ReactHtmlParser(element.question) }\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey={index}>\n                            <Card.Body>{ ReactHtmlParser(element.answer) }</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </div>\n        )\n    }) : null\n}"]},"metadata":{},"sourceType":"module"}